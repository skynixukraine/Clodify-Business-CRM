<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "emergencies".
 *
 * @property int $id
 * @property int $user_id
 * @property int $date_registered
 * @property string $summary
 *
 * @property Users $user
 */
class Emergency extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'emergencies';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'date_registered'], 'integer'],
            [['summary'], 'string'],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => 'User ID',
            'date_registered' => 'Date Registered',
            'summary' => 'Summary',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    public function afterSave($insert, $changedAttributes)
    {
        if ( $insert === true ) {

            // Use the client to do fun stuff like send text messages!
            /*
             *
                    $client = new Client(
                        Yii::$app->params['twillio']['accountSid'],
                        Yii::$app->params['twillio']['token']);

                    $serviceSid = Yii::$app->params['twillio']['serviceSid'];
             * $client
                ->notify->services($serviceSid)
                ->notifications->create([
                    "toBinding" => '{"binding_type":"sms", "address": "' .  $user->phone . '"}',
                    'body'      => $message
                ]);*/

            $text           = $this->summary;
            $description    = "Emergency Notification";
            $start_time     = 'AUTO'; // send immediately, a schedule time using format YYYY-MM-DD HH:MM:SS
            $end_time       = 'AUTO';
            $rate           = 1;
            $lifetime       = 4;
            $source         = Yii::$app->params['smsService']['from'];
            $recipient      = $this->getUser()->one()->phone;
            $user           = Yii::$app->params['smsService']['user'];
            $password       = Yii::$app->params['smsService']['password'];

            $myXML 	 = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n";
            $myXML 	.= "<request>";
            $myXML 	.= "<operation>SENDSMS</operation>";
            $myXML 	.= '		<message start_time="'.$start_time.'" end_time="'.$end_time.'" lifetime="'.$lifetime.'" rate="'.$rate.'" desc="'.$description.'" source="'.$source.'">'."\n";
            $myXML 	.= "		<body>".$text."</body>";
            $myXML 	.= "		<recipient>".$recipient."</recipient>";
            $myXML 	.=  "</message>";
            $myXML 	.= "</request>";

            $ch = curl_init();
            curl_setopt($ch, CURLOPT_USERPWD , $user.':'.$password);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_URL, 'http://sms-fly.com/api/api.php');
            curl_setopt($ch, CURLOPT_HTTPHEADER, array("Content-Type: text/xml", "Accept: text/xml"));
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $myXML);
            $response = curl_exec($ch);
            curl_close($ch);

            Yii::getLogger()->log($response, Logger::LEVEL_INFO);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

}
